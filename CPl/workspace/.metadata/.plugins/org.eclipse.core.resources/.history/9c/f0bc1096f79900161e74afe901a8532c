#include "cute.h"
#include "ide_listener.h"
#include "xml_listener.h"
#include "cute_runner.h"
#include <string>
#include "wlist.h"

void testWlistSimple() {
	std::istringstream in {"FOO foo FoO baa hello world"};
	std::set<std::string> lst = wlist(in);
	auto it = lst.begin();
	ASSERT_EQUAL("baa", *it);
	ASSERT_EQUAL("foo", *(++it));
	ASSERT_EQUAL("hello", *(++it));
	ASSERT_EQUAL("world", *(++it));
	ASSERT_EQUAL(lst.end(), ++it);
}

void testWlistEmpty() {
	std::istringstream in {};
	std::set<std::string> lst = wlist(in);
	auto it = lst.begin();
	ASSERT_EQUAL(lst.end(), it);
}

bool runAllTests(int argc, char const *argv[]) {
	cute::suite s { };
	//TODO add your test here
	s.push_back(CUTE(testWlistSimple));
	s.push_back(CUTE(testWlistEmpty));
	cute::xml_file_opener xmlfile(argc, argv);
	cute::xml_listener<cute::ide_listener<>> lis(xmlfile.out);
	auto runner { cute::makeRunner(lis, argc, argv) };
	bool success = runner(s, "AllTests");
	return success;
}

int main(int argc, char const *argv[]) {
    return runAllTests(argc, argv) ? EXIT_SUCCESS : EXIT_FAILURE;
}
